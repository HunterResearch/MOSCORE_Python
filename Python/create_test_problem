#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue May 14 17:29:00 2019

@author: nathangeldner
"""

import numpy as np

def create_allocation_problem(obj_vals,obj_vars):
    """Takes in obj_vals, a dictionary of tuples of objective values (other functionsa assume equal length)
    keyed by system number and obj_vars, a dictionary of covariance matrices (numpy matrices) keyed by system number with number
    of rows and columns equal to the number of objectives. returns a dictionary
    with keys "obj" and "var" pointing to obj_vals and obj_var respectively"""
    
    #TODO check for positive semidefinite?
    
    return {"obj": obj_vals, "var": obj_vars}
    
    
def dummy_allocation_problem():
    """This is just for testing, I'm using the 3d example but adding a 4th objective
    that's always zero"""
    
    obj_vals = {0:[8.0, 36.0, 60.0, 0.0], 1:[12.0, 32.0, 52.0, 0.0], 2:[14.0, 38.0, 54.0, 0.0],\
                3:[16.0, 46.0, 48.0, 0.0], 4:[4.0, 42.0, 56.0, 0.0], 5:[18.0, 40.0, 62.0, 0.0], \
             6:[10.0, 44.0, 58.0, 0.0], 7:[20.0, 34.0, 64.0, 0.0], 8:[22.0, 28.0, 68.0, 0.0],\
             9:[24.0, 40.0, 62.0, 0.0], 10:[26.0, 38.0, 64.0, 0.0], 11:[28.0, 40.0, 66.0, 0.0], \
             12:[30.0, 42.0, 62.0, 0.0], 13:[32.0, 44.0, 64.0, 0.0], 14:[26.0, 40.0, 66.0, 0.0],\
             15:[28.0, 42.0, 64.0, 0.0], 16:[32.0, 38.0, 66.0, 0.0], 17:[30.0, 40.0, 62.0, 0.0], \
             18:[34.0, 42.0, 64.0, 0.0], 19:[26.0, 44.0, 60.0, 0.0], 20:[28.0, 38.0, 66.0, 0.0],\
             21:[32.0, 40.0, 62.0, 0.0], 22:[30.0, 46.0, 64.0, 0.0], 23:[32.0, 44.0, 66.0, 0.0],\
             24:[30.0, 40.0, 64.0, 0.0]}
  
    n_objs = len(obj_vals[0])
    
    this_var = 8.0*8.0
    
    this_corr = 0.85
    
    obj_var = np.matrix(np.identity(n_objs)*this_var + (np.ones([n_objs,n_objs]) - np.identity(n_objs))*this_corr*this_var)
    
    obj_vars = {}
    
    for i in range(len(obj_vals)):
        obj_vars[i] = obj_var
    
    return create_allocation_problem(obj_vals,obj_vars)
    













